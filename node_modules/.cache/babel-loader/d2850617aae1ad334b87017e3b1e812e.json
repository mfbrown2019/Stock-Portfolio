{"ast":null,"code":"var _jsxFileName = \"/Users/matthewbrown/Desktop/code/Summer/Stock-Portfolio/stock-portfolio/src/COMPONENTS/History.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"../CSS/History.css\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction History() {\n  _s();\n\n  const [date, setDate] = useState(\"\");\n  const [symbol, setSymbol] = useState(\"\");\n  const [buy, setBuy] = useState(\"\");\n  const [sell, setSell] = useState(\"\");\n  const [shares, setShares] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [note, setNote] = useState(\"\");\n  const [side, setSide] = useState(\"\");\n  const [history, setHistory] = useState(\"1\");\n  const [winner, setWinner] = useState(0);\n  const [losers, setLosers] = useState(0);\n  const [totalPL, setTotalPL] = useState(0.0);\n  const [totalTrades, setTotalTrades] = useState(0);\n  const [winPercent, setWinPercent] = useState(0);\n  const [requiredPercent, setRequriedPercent] = useState(0);\n  const [avgWinner, setAvgWinner] = useState(0);\n  const [avgLoser, setAvgLoser] = useState(0);\n  const [avgTime, setAvgTime] = useState(0);\n  const [avgROI, setAvgROI] = useState(0);\n  const [investment, setInvestment] = useState(0);\n  const [avgDay, setAvgDay] = useState(0);\n  const categories = [\"Side\", \"Date\", \"Ticker\", \"Buy Price\", \"Sell Price\", \"Shares\", \"Total Time\", \"P & L\", \"ROI\", \"Notes\"];\n  console.log(side);\n  useEffect(() => {\n    fetch(\" http://localhost:8000/all\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(result => {\n      let temp = 0;\n      let time = 0;\n      let trades = 0;\n      let roi = 0;\n      let days = [];\n      let invest = 0;\n      result.map(item => {\n        temp += parseFloat(item.pl); // console.log(item.pl);\n\n        trades += 1;\n        time += parseFloat(item.time);\n        roi += parseFloat(item.roi);\n        invest += parseFloat(item.buy) * item.shares;\n      });\n      time /= result.length;\n      roi /= result.length;\n      setAvgROI(roi);\n      setAvgTime(time);\n      setTotalPL(temp);\n      setTotalTrades(trades);\n    }).catch(error => console.log(\"error\", error));\n    fetch(\" http://localhost:8000/winners\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(result => {\n      let temp = 0;\n      setWinner(result.length);\n      result.map(item => {\n        temp += parseFloat(item.pl);\n      });\n      temp /= winner;\n      console.log(temp);\n      setAvgWinner(temp);\n    }).catch(error => console.log(\"error\", error));\n    fetch(\" http://localhost:8000/losers\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(result => {\n      setLosers(result.length);\n      let temp = 0;\n      result.map(item => {\n        temp += parseFloat(item.pl);\n      });\n      temp /= winner;\n      console.log(temp);\n      setAvgLoser(temp);\n    }).catch(error => console.log(\"error\", error));\n    let winp = winner / totalTrades * 100;\n    setWinPercent(winp);\n    let required = 1 / (avgWinner / (avgLoser * -1)) / (1 / (avgWinner / (avgLoser * -1)) + 1) * 100;\n    setRequriedPercent(required);\n  });\n\n  const addItem = async () => {\n    if (buy == \"\") {\n      return;\n    }\n\n    let roi = (parseFloat(sell) - parseFloat(buy)) * parseFloat(shares) / (parseFloat(buy) * parseFloat(shares)) * 100;\n    console.log(roi);\n    let win = 1;\n\n    if (parseFloat(sell) - parseFloat(buy) >= 0) {\n      win = 1;\n    } else {\n      win = 0;\n    }\n\n    let pl = ((parseFloat(sell) - parseFloat(buy)) * parseFloat(shares)).toFixed(2);\n\n    if (side == \"Short\") {\n      roi = roi * -1;\n      win = win + 1 % 2;\n      pl = ((parseFloat(buy) - parseFloat(sell)) * parseFloat(shares)).toFixed(2);\n    }\n\n    const raw = {\n      id: Math.random(),\n      date: date,\n      symbol: symbol,\n      buy: parseFloat(buy).toFixed(2),\n      sell: parseFloat(sell).toFixed(2),\n      shares: parseFloat(shares),\n      time: time,\n      note: note,\n      pl: pl,\n      side: side,\n      roi: roi.toFixed(2).toString() + \"%\",\n      win: win\n    };\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(raw)\n    };\n    await fetch(\" http://localhost:8000/all\", requestOptions);\n\n    if (win == 1) {\n      await fetch(\" http://localhost:8000/winners\", requestOptions);\n    } else {\n      await fetch(\" http://localhost:8000/losers\", requestOptions);\n    }\n\n    setDate(\"\");\n    setSymbol(\"\");\n    setBuy(\"\");\n    setSell(\"\");\n    setShares(\"\");\n    setTime(\"\");\n    setNote(\"\");\n    fetch(\" http://localhost:8000/all\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(result => {\n      setHistory(result);\n      console.log(result);\n    }).catch(error => console.log(\"error\", error));\n  };\n\n  const getAllTrades = () => {\n    fetch(\" http://localhost:8000/all\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(result => {\n      setHistory(result);\n      console.log(result);\n    }).catch(error => console.log(\"error\", error));\n  };\n\n  const getWinningTrades = () => {\n    fetch(\" http://localhost:8000/winners\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(result => {\n      setHistory(result);\n      console.log(result);\n    }).catch(error => console.log(\"error\", error));\n  };\n\n  const getLosingTrades = () => {\n    fetch(\" http://localhost:8000/losers\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(result => {\n      setHistory(result);\n      console.log(result);\n    }).catch(error => console.log(\"error\", error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"HistoryPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"side-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"long-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Long\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: e => {\n            if (e.target.checked) {\n              setSide(\"\");\n              setSide(\"Long\");\n            } else {\n              setSide(\"Short\");\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"short-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Short\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: e => {\n            if (e.target.checked) {\n              setSide(\"\");\n              setSide(\"Short\");\n            } else {\n              setSide(\"Long\");\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"date-history\",\n      placeholder: \"Date\",\n      onChange: e => {\n        setDate(e.target.value);\n      },\n      value: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"symbol-history\",\n      placeholder: \"Ticker\",\n      onChange: e => {\n        setSymbol(e.target.value);\n      },\n      value: symbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"buy-history\",\n      placeholder: \"Buy Price\",\n      onChange: e => {\n        setBuy(e.target.value);\n      },\n      value: buy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"sell-history\",\n      placeholder: \"Sell Price\",\n      onChange: e => {\n        setSell(e.target.value);\n      },\n      value: sell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"shares-history\",\n      placeholder: \"Shares\",\n      onChange: e => {\n        setShares(e.target.value);\n      },\n      value: shares\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"time-history\",\n      placeholder: \"Total Time\",\n      onChange: e => {\n        setTime(e.target.value);\n      },\n      value: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"note-history\",\n      placeholder: \"Enter Note....\",\n      onChange: e => {\n        setNote(e.target.value);\n      },\n      value: note\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-history\",\n      onClick: addItem,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Winners-filter\",\n      onClick: getWinningTrades,\n      children: \"Winners\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"All-filter\",\n      onClick: getAllTrades,\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Losers-filter\",\n      onClick: getLosingTrades,\n      children: \"Losers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"history-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"winlossR\",\n        children: \"Win Rate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"winlossrate\",\n        children: [winner, \" - \", losers]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"winlossP\",\n        children: \"Win Percentage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }, this), winPercent > requiredPercent ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"winlosspercentGreen\",\n        children: [winPercent.toFixed(1), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"winlosspercentRed\",\n        children: [winPercent.toFixed(1), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avgW\",\n        children: \"Average Win\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avgWnumber\",\n        children: [\"$\", avgWinner.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avgL\",\n        children: \"Average Loss\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avgLnumber\",\n        children: [\"$\", avgLoser.toFixed(2) * -1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PL\",\n        children: \"P & L\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }, this), totalPL > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plNumberGreen\",\n        children: [\"$\", totalPL.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plNumberRed\",\n        children: [\"$\", totalPL.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"required\",\n        children: \"Required Win %\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"requiredNumber\",\n        children: [requiredPercent.toFixed(1), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avgTime\",\n        children: \"Average Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avgTimeNumber\",\n        children: [avgTime.toFixed(0), \"sec\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avgROI\",\n        children: \"Average ROI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }, this), avgROI > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avgROINumberGreen\",\n        children: [avgROI.toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avgROINumberRed\",\n        children: [avgROI.toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avgInvestment\",\n        children: \"Average Investment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avgInvestmentNumber\",\n        children: [\"$\", investment]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avgDayProfit\",\n        children: \"Average Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 17\n      }, this), avgDay > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avgDayProfitGreen\",\n        children: [\"$\", avgDay]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avgDayProfitRed\",\n        children: [\"$\", avgDay]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"history-info\",\n      children: [categories.map(category => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"history-\" + category,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-display\",\n        children: history == 1 ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 25\n        }, this) : history.slice().reverse().map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"history-items alter\" + index % 2,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"center\",\n              children: item.side\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"center\",\n              children: item.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"center\",\n              children: item.symbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"center\",\n              children: item.buy\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"center\",\n              children: item.sell\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"center\",\n              children: item.shares\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"center\",\n              children: item.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"center\",\n              children: item.pl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"center\",\n              children: item.roi\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"left\",\n              children: item.note\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 37\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 9\n  }, this);\n}\n\n_s(History, \"Ggu+zohslYY3Sg3UWV+8lSVQNHM=\");\n\n_c = History;\nexport default History;\n\nvar _c;\n\n$RefreshReg$(_c, \"History\");","map":{"version":3,"names":["React","useState","useEffect","History","date","setDate","symbol","setSymbol","buy","setBuy","sell","setSell","shares","setShares","time","setTime","note","setNote","side","setSide","history","setHistory","winner","setWinner","losers","setLosers","totalPL","setTotalPL","totalTrades","setTotalTrades","winPercent","setWinPercent","requiredPercent","setRequriedPercent","avgWinner","setAvgWinner","avgLoser","setAvgLoser","avgTime","setAvgTime","avgROI","setAvgROI","investment","setInvestment","avgDay","setAvgDay","categories","console","log","fetch","method","headers","then","response","json","result","temp","trades","roi","days","invest","map","item","parseFloat","pl","length","catch","error","winp","required","addItem","win","toFixed","raw","id","Math","random","toString","requestOptions","body","JSON","stringify","getAllTrades","getWinningTrades","getLosingTrades","e","target","checked","value","category","slice","reverse","index"],"sources":["/Users/matthewbrown/Desktop/code/Summer/Stock-Portfolio/stock-portfolio/src/COMPONENTS/History.js"],"sourcesContent":["import React from \"react\";\nimport \"../CSS/History.css\";\nimport { useState, useEffect } from \"react\";\nfunction History() {\n    const [date, setDate] = useState(\"\");\n    const [symbol, setSymbol] = useState(\"\");\n    const [buy, setBuy] = useState(\"\");\n    const [sell, setSell] = useState(\"\");\n    const [shares, setShares] = useState(\"\");\n    const [time, setTime] = useState(\"\");\n    const [note, setNote] = useState(\"\");\n    const [side, setSide] = useState(\"\");\n    const [history, setHistory] = useState(\"1\");\n    const [winner, setWinner] = useState(0);\n    const [losers, setLosers] = useState(0);\n    const [totalPL, setTotalPL] = useState(0.0);\n    const [totalTrades, setTotalTrades] = useState(0);\n    const [winPercent, setWinPercent] = useState(0);\n    const [requiredPercent, setRequriedPercent] = useState(0);\n    const [avgWinner, setAvgWinner] = useState(0);\n    const [avgLoser, setAvgLoser] = useState(0);\n    const [avgTime, setAvgTime] = useState(0);\n    const [avgROI, setAvgROI] = useState(0);\n    const [investment, setInvestment] = useState(0);\n    const [avgDay, setAvgDay] = useState(0);\n    const categories = [\n        \"Side\",\n        \"Date\",\n        \"Ticker\",\n        \"Buy Price\",\n        \"Sell Price\",\n        \"Shares\",\n        \"Total Time\",\n        \"P & L\",\n        \"ROI\",\n        \"Notes\",\n    ];\n    console.log(side);\n\n    useEffect(() => {\n        fetch(\" http://localhost:8000/all\", {\n            method: \"GET\",\n            headers: { \"Content-Type\": \"application/json\" },\n        })\n            .then((response) => response.json())\n            .then((result) => {\n                let temp = 0;\n                let time = 0;\n                let trades = 0;\n                let roi = 0;\n                let days = [];\n                let invest = 0;\n                result.map((item) => {\n                    temp += parseFloat(item.pl);\n                    // console.log(item.pl);\n                    trades += 1;\n                    time += parseFloat(item.time);\n                    roi += parseFloat(item.roi);\n                    invest += parseFloat(item.buy) * item.shares;\n                });\n                time /= result.length;\n                roi /= result.length;\n                setAvgROI(roi);\n                setAvgTime(time);\n                setTotalPL(temp);\n                setTotalTrades(trades);\n            })\n            .catch((error) => console.log(\"error\", error));\n\n        fetch(\" http://localhost:8000/winners\", {\n            method: \"GET\",\n            headers: { \"Content-Type\": \"application/json\" },\n        })\n            .then((response) => response.json())\n            .then((result) => {\n                let temp = 0;\n                setWinner(result.length);\n                result.map((item) => {\n                    temp += parseFloat(item.pl);\n                });\n                temp /= winner;\n                console.log(temp);\n                setAvgWinner(temp);\n            })\n\n            .catch((error) => console.log(\"error\", error));\n\n        fetch(\" http://localhost:8000/losers\", {\n            method: \"GET\",\n            headers: { \"Content-Type\": \"application/json\" },\n        })\n            .then((response) => response.json())\n            .then((result) => {\n                setLosers(result.length);\n                let temp = 0;\n\n                result.map((item) => {\n                    temp += parseFloat(item.pl);\n                });\n                temp /= winner;\n                console.log(temp);\n                setAvgLoser(temp);\n            })\n            .catch((error) => console.log(\"error\", error));\n\n        let winp = (winner / totalTrades) * 100;\n        setWinPercent(winp);\n        let required =\n            (1 /\n                (avgWinner / (avgLoser * -1)) /\n                (1 / (avgWinner / (avgLoser * -1)) + 1)) *\n            100;\n        setRequriedPercent(required);\n    });\n\n    const addItem = async () => {\n        if (buy == \"\") {\n            return;\n        }\n        let roi =\n            (((parseFloat(sell) - parseFloat(buy)) * parseFloat(shares)) /\n                (parseFloat(buy) * parseFloat(shares))) *\n            100;\n\n        console.log(roi);\n        let win = 1;\n        if (parseFloat(sell) - parseFloat(buy) >= 0) {\n            win = 1;\n        } else {\n            win = 0;\n        }\n        let pl = (\n            (parseFloat(sell) - parseFloat(buy)) *\n            parseFloat(shares)\n        ).toFixed(2);\n        if (side == \"Short\") {\n            roi = roi * -1;\n            win = win + (1 % 2);\n            pl = (\n                (parseFloat(buy) - parseFloat(sell)) *\n                parseFloat(shares)\n            ).toFixed(2);\n        }\n\n        const raw = {\n            id: Math.random(),\n            date: date,\n            symbol: symbol,\n            buy: parseFloat(buy).toFixed(2),\n            sell: parseFloat(sell).toFixed(2),\n            shares: parseFloat(shares),\n            time: time,\n            note: note,\n            pl: pl,\n            side: side,\n            roi: roi.toFixed(2).toString() + \"%\",\n            win: win,\n        };\n\n        const requestOptions = {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(raw),\n        };\n\n        await fetch(\" http://localhost:8000/all\", requestOptions);\n        if (win == 1) {\n            await fetch(\" http://localhost:8000/winners\", requestOptions);\n        } else {\n            await fetch(\" http://localhost:8000/losers\", requestOptions);\n        }\n        setDate(\"\");\n        setSymbol(\"\");\n        setBuy(\"\");\n        setSell(\"\");\n        setShares(\"\");\n        setTime(\"\");\n        setNote(\"\");\n        fetch(\" http://localhost:8000/all\", {\n            method: \"GET\",\n            headers: { \"Content-Type\": \"application/json\" },\n        })\n            .then((response) => response.json())\n            .then((result) => {\n                setHistory(result);\n                console.log(result);\n            })\n            .catch((error) => console.log(\"error\", error));\n    };\n\n    const getAllTrades = () => {\n        fetch(\" http://localhost:8000/all\", {\n            method: \"GET\",\n            headers: { \"Content-Type\": \"application/json\" },\n        })\n            .then((response) => response.json())\n            .then((result) => {\n                setHistory(result);\n                console.log(result);\n            })\n            .catch((error) => console.log(\"error\", error));\n    };\n    const getWinningTrades = () => {\n        fetch(\" http://localhost:8000/winners\", {\n            method: \"GET\",\n            headers: { \"Content-Type\": \"application/json\" },\n        })\n            .then((response) => response.json())\n            .then((result) => {\n                setHistory(result);\n                console.log(result);\n            })\n            .catch((error) => console.log(\"error\", error));\n    };\n    const getLosingTrades = () => {\n        fetch(\" http://localhost:8000/losers\", {\n            method: \"GET\",\n            headers: { \"Content-Type\": \"application/json\" },\n        })\n            .then((response) => response.json())\n            .then((result) => {\n                setHistory(result);\n                console.log(result);\n            })\n            .catch((error) => console.log(\"error\", error));\n    };\n    return (\n        <div className=\"HistoryPage\">\n            <div className=\"side-history\">\n                <div className=\"long-box\">\n                    <div>Long</div>\n                    <input\n                        type=\"checkbox\"\n                        onChange={(e) => {\n                            if (e.target.checked) {\n                                setSide(\"\");\n                                setSide(\"Long\");\n                            } else {\n                                setSide(\"Short\");\n                            }\n                        }}\n                    ></input>\n                </div>\n                <div className=\"short-box\">\n                    <div>Short</div>\n                    <input\n                        type=\"checkbox\"\n                        onChange={(e) => {\n                            if (e.target.checked) {\n                                setSide(\"\");\n                                setSide(\"Short\");\n                            } else {\n                                setSide(\"Long\");\n                            }\n                        }}\n                    ></input>\n                </div>\n            </div>\n            <input\n                className=\"date-history\"\n                placeholder=\"Date\"\n                onChange={(e) => {\n                    setDate(e.target.value);\n                }}\n                value={date}\n            />\n            <input\n                className=\"symbol-history\"\n                placeholder=\"Ticker\"\n                onChange={(e) => {\n                    setSymbol(e.target.value);\n                }}\n                value={symbol}\n            />\n            <input\n                className=\"buy-history\"\n                placeholder=\"Buy Price\"\n                onChange={(e) => {\n                    setBuy(e.target.value);\n                }}\n                value={buy}\n            />\n            <input\n                className=\"sell-history\"\n                placeholder=\"Sell Price\"\n                onChange={(e) => {\n                    setSell(e.target.value);\n                }}\n                value={sell}\n            />\n            <input\n                className=\"shares-history\"\n                placeholder=\"Shares\"\n                onChange={(e) => {\n                    setShares(e.target.value);\n                }}\n                value={shares}\n            />\n            <input\n                className=\"time-history\"\n                placeholder=\"Total Time\"\n                onChange={(e) => {\n                    setTime(e.target.value);\n                }}\n                value={time}\n            />\n            <textarea\n                className=\"note-history\"\n                placeholder=\"Enter Note....\"\n                onChange={(e) => {\n                    setNote(e.target.value);\n                }}\n                value={note}\n            />\n            <button className=\"submit-history\" onClick={addItem}>\n                Submit\n            </button>\n            <button className=\"Winners-filter\" onClick={getWinningTrades}>\n                Winners\n            </button>\n            <button className=\"All-filter\" onClick={getAllTrades}>\n                All\n            </button>\n            <button className=\"Losers-filter\" onClick={getLosingTrades}>\n                Losers\n            </button>\n\n            <div className=\"history-stats\">\n                <div className=\"winlossR\">Win Rate</div>\n                <div className=\"winlossrate\">\n                    {winner} - {losers}\n                </div>\n                <div className=\"winlossP\">Win Percentage</div>\n                {winPercent > requiredPercent ? (\n                    <div className=\"winlosspercentGreen\">\n                        {winPercent.toFixed(1)}%\n                    </div>\n                ) : (\n                    <div className=\"winlosspercentRed\">\n                        {winPercent.toFixed(1)}%\n                    </div>\n                )}\n\n                <div className=\"avgW\">Average Win</div>\n                <div className=\"avgWnumber\">${avgWinner.toFixed(2)}</div>\n                <div className=\"avgL\">Average Loss</div>\n                <div className=\"avgLnumber\">${avgLoser.toFixed(2) * -1}</div>\n                <div className=\"PL\">P & L</div>\n                {totalPL > 0 ? (\n                    <div className=\"plNumberGreen\">${totalPL.toFixed(2)}</div>\n                ) : (\n                    <div className=\"plNumberRed\">${totalPL.toFixed(2)}</div>\n                )}\n                <div className=\"required\">Required Win %</div>\n                <div className=\"requiredNumber\">\n                    {requiredPercent.toFixed(1)}%\n                </div>\n                <div className=\"avgTime\">Average Time</div>\n                <div className=\"avgTimeNumber\">{avgTime.toFixed(0)}sec</div>\n                <div className=\"avgROI\">Average ROI</div>\n                {avgROI > 0 ? (\n                    <div className=\"avgROINumberGreen\">\n                        {avgROI.toFixed(2)}%\n                    </div>\n                ) : (\n                    <div className=\"avgROINumberRed\">{avgROI.toFixed(2)}%</div>\n                )}\n\n                <div className=\"avgInvestment\">Average Investment</div>\n                <div className=\"avgInvestmentNumber\">${investment}</div>\n\n                <div className=\"avgDayProfit\">Average Day</div>\n                {avgDay > 0 ? (\n                    <div className=\"avgDayProfitGreen\">${avgDay}</div>\n                ) : (\n                    <div className=\"avgDayProfitRed\">${avgDay}</div>\n                )}\n            </div>\n\n            <div className=\"history-info\">\n                {categories.map((category) => {\n                    return (\n                        <div className={\"history-\" + category}>\n                            <div>{category}</div>\n                        </div>\n                    );\n                })}\n\n                <div className=\"history-display\">\n                    {history == 1 ? (\n                        <div></div>\n                    ) : (\n                        history\n                            .slice()\n                            .reverse()\n                            .map((item, index) => {\n                                return (\n                                    <div\n                                        className={\n                                            \"history-items alter\" + (index % 2)\n                                        }\n                                    >\n                                        <div className=\"center\">\n                                            {item.side}\n                                        </div>\n                                        <div className=\"center\">\n                                            {item.date}\n                                        </div>\n                                        <div className=\"center\">\n                                            {item.symbol}\n                                        </div>\n                                        <div className=\"center\">{item.buy}</div>\n                                        <div className=\"center\">\n                                            {item.sell}\n                                        </div>\n                                        <div className=\"center\">\n                                            {item.shares}\n                                        </div>\n                                        <div className=\"center\">\n                                            {item.time}\n                                        </div>\n                                        <div className=\"center\">{item.pl}</div>\n                                        <div className=\"center\">{item.roi}</div>\n                                        <div className=\"left\">{item.note}</div>\n                                    </div>\n                                );\n                            })\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default History;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}