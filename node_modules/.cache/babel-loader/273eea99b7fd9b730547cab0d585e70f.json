{"ast":null,"code":"import React from \"react\";\n\nconst EconomicCalendar = props => {\n  const {\n    widgetProps,\n    widgetPropsAny\n  } = props;\n  const ref = React.createRef();\n  React.useEffect(() => {\n    let refValue;\n\n    if (ref.current) {\n      const script = document.createElement(\"script\");\n      script.src = \"https://s3.tradingview.com/external-embedding/\" + \"embed-widget-events.js\";\n      script.async = true;\n      script.type = \"text/javascript\";\n      script.innerHTML = JSON.stringify(Object.assign(Object.assign({\n        \"colorTheme\": \"dark\",\n        \"isTransparent\": false,\n        \"width\": \"510\",\n        \"height\": \"600\",\n        \"locale\": \"en\",\n        \"importanceFilter\": \"-1,0,1\"\n      }, widgetProps), widgetPropsAny));\n      ref.current.appendChild(script);\n      refValue = ref.current;\n    }\n\n    return () => {\n      if (refValue) {\n        while (refValue.firstChild) {\n          refValue.removeChild(refValue.firstChild);\n        }\n      }\n    };\n  }, [ref, widgetProps, widgetPropsAny]);\n  return React.createElement(\"div\", {\n    ref: ref\n  });\n};\n\nexport default EconomicCalendar;","map":{"version":3,"names":["React","EconomicCalendar","props","widgetProps","widgetPropsAny","ref","createRef","useEffect","refValue","current","script","document","createElement","src","async","type","innerHTML","JSON","stringify","Object","assign","appendChild","firstChild","removeChild"],"sources":["/Users/matthewbrown/Desktop/code/Summer/Stock-Portfolio/stock-portfolio/node_modules/react-tradingview-embed/dist/components/EconomicCalendar.js"],"sourcesContent":["import React from \"react\";\r\nconst EconomicCalendar = (props) => {\r\n    const { widgetProps, widgetPropsAny } = props;\r\n    const ref = React.createRef();\r\n    React.useEffect(() => {\r\n        let refValue;\r\n        if (ref.current) {\r\n            const script = document.createElement(\"script\");\r\n            script.src = \"https://s3.tradingview.com/external-embedding/\"\r\n                + \"embed-widget-events.js\";\r\n            script.async = true;\r\n            script.type = \"text/javascript\";\r\n            script.innerHTML = JSON.stringify(Object.assign(Object.assign({ \"colorTheme\": \"dark\", \"isTransparent\": false, \"width\": \"510\", \"height\": \"600\", \"locale\": \"en\", \"importanceFilter\": \"-1,0,1\" }, widgetProps), widgetPropsAny));\r\n            ref.current.appendChild(script);\r\n            refValue = ref.current;\r\n        }\r\n        return () => {\r\n            if (refValue) {\r\n                while (refValue.firstChild) {\r\n                    refValue.removeChild(refValue.firstChild);\r\n                }\r\n            }\r\n        };\r\n    }, [ref, widgetProps, widgetPropsAny]);\r\n    return React.createElement(\"div\", { ref: ref });\r\n};\r\nexport default EconomicCalendar;\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;EAChC,MAAM;IAAEC,WAAF;IAAeC;EAAf,IAAkCF,KAAxC;EACA,MAAMG,GAAG,GAAGL,KAAK,CAACM,SAAN,EAAZ;EACAN,KAAK,CAACO,SAAN,CAAgB,MAAM;IAClB,IAAIC,QAAJ;;IACA,IAAIH,GAAG,CAACI,OAAR,EAAiB;MACb,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;MACAF,MAAM,CAACG,GAAP,GAAa,mDACP,wBADN;MAEAH,MAAM,CAACI,KAAP,GAAe,IAAf;MACAJ,MAAM,CAACK,IAAP,GAAc,iBAAd;MACAL,MAAM,CAACM,SAAP,GAAmBC,IAAI,CAACC,SAAL,CAAeC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc;QAAE,cAAc,MAAhB;QAAwB,iBAAiB,KAAzC;QAAgD,SAAS,KAAzD;QAAgE,UAAU,KAA1E;QAAiF,UAAU,IAA3F;QAAiG,oBAAoB;MAArH,CAAd,EAA+IjB,WAA/I,CAAd,EAA2KC,cAA3K,CAAf,CAAnB;MACAC,GAAG,CAACI,OAAJ,CAAYY,WAAZ,CAAwBX,MAAxB;MACAF,QAAQ,GAAGH,GAAG,CAACI,OAAf;IACH;;IACD,OAAO,MAAM;MACT,IAAID,QAAJ,EAAc;QACV,OAAOA,QAAQ,CAACc,UAAhB,EAA4B;UACxBd,QAAQ,CAACe,WAAT,CAAqBf,QAAQ,CAACc,UAA9B;QACH;MACJ;IACJ,CAND;EAOH,CAnBD,EAmBG,CAACjB,GAAD,EAAMF,WAAN,EAAmBC,cAAnB,CAnBH;EAoBA,OAAOJ,KAAK,CAACY,aAAN,CAAoB,KAApB,EAA2B;IAAEP,GAAG,EAAEA;EAAP,CAA3B,CAAP;AACH,CAxBD;;AAyBA,eAAeJ,gBAAf"},"metadata":{},"sourceType":"module"}