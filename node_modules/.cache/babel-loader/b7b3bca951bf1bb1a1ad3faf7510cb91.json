{"ast":null,"code":"/**\r\n * Copyright (C) 2014 yanni4night.com\r\n * index.js\r\n *\r\n * changelog\r\n * 2014-08-16[14:31:02]:authorized\r\n * 2014-08-19[14:05:43]:fixed crash when first piece is empty\r\n * 2014-11-16[21:15:06]:support windows \\\\\r\n *\r\n * @author yanni4night@gmail.com\r\n * @version 0.1.2\r\n * @since 0.1.0\r\n */\n'use strict';\n\nvar extend = require('extend');\n\nvar url = require('url');\n\nvar path = require('path');\n/**\r\n * Join two or more url pieces into one.\r\n *\r\n * Only the protocol/port/host in the first piece is saved,but all the get parameters\r\n * will be saved.\r\n *\r\n * @param {String|Function}... Multiple url pieces in function or string type.\r\n * @return {String} The URL joined.\r\n */\n\n\nmodule.exports = function urljoin() {\n  //convert to Array\n  var pieces = Array.prototype.slice.call(arguments);\n  var query = {};\n  var first, paths;\n\n  if (!pieces.length) {\n    return '';\n  } else if (1 === pieces.length) {\n    return pieces[0];\n  }\n\n  paths = pieces.map(function (piece) {\n    var pieceStr = 'function' === typeof piece ? piece() : String(piece || '');\n\n    if (!pieceStr) {\n      return '';\n    }\n\n    var parsed = url.parse(pieceStr, true);\n\n    if (!first && parsed) {\n      first = parsed;\n    }\n\n    extend(query, parsed.query);\n    return parsed.pathname;\n  }).filter(function (piece) {\n    return !!piece;\n  });\n  delete first.search; //we use query instead of search\n\n  first.query = query;\n  first.pathname = path.join.apply(path, paths).replace(new RegExp('\\\\' + path.sep, 'g'), '/');\n  return url.format(first);\n};","map":{"version":3,"names":["extend","require","url","path","module","exports","urljoin","pieces","Array","prototype","slice","call","arguments","query","first","paths","length","map","piece","pieceStr","String","parsed","parse","pathname","filter","search","join","apply","replace","RegExp","sep","format"],"sources":["/Users/matthewbrown/Desktop/code/Summer/Stock-Portfolio/stock-portfolio/node_modules/urljoin/index.js"],"sourcesContent":["/**\r\n * Copyright (C) 2014 yanni4night.com\r\n * index.js\r\n *\r\n * changelog\r\n * 2014-08-16[14:31:02]:authorized\r\n * 2014-08-19[14:05:43]:fixed crash when first piece is empty\r\n * 2014-11-16[21:15:06]:support windows \\\\\r\n *\r\n * @author yanni4night@gmail.com\r\n * @version 0.1.2\r\n * @since 0.1.0\r\n */\r\n\r\n'use strict';\r\n\r\nvar extend = require('extend');\r\nvar url = require('url');\r\nvar path = require('path');\r\n\r\n/**\r\n * Join two or more url pieces into one.\r\n *\r\n * Only the protocol/port/host in the first piece is saved,but all the get parameters\r\n * will be saved.\r\n *\r\n * @param {String|Function}... Multiple url pieces in function or string type.\r\n * @return {String} The URL joined.\r\n */\r\nmodule.exports = function urljoin() {\r\n\r\n    //convert to Array\r\n    var pieces = Array.prototype.slice.call(arguments);\r\n    var query = {};\r\n    var first, paths;\r\n\r\n    if (!pieces.length) {\r\n        return '';\r\n    } else if (1 === pieces.length) {\r\n        return pieces[0];\r\n    }\r\n\r\n    paths = pieces.map(function(piece) {\r\n        var pieceStr = 'function' === typeof piece ? piece() : String(piece || '');\r\n\r\n        if (!pieceStr) {\r\n            return '';\r\n        }\r\n\r\n        var parsed = url.parse(pieceStr, true);\r\n\r\n        if (!first && parsed) {\r\n            first = parsed;\r\n        }\r\n\r\n        extend(query, parsed.query);\r\n        return parsed.pathname;\r\n    }).filter(function(piece) {\r\n        return !!piece;\r\n    });\r\n\r\n    delete first.search; //we use query instead of search\r\n    first.query = query;\r\n    first.pathname = path.join.apply(path, paths).replace(new RegExp('\\\\' + path.sep, 'g'), '/');\r\n    return url.format(first);\r\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIC,GAAG,GAAGD,OAAO,CAAC,KAAD,CAAjB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAG,MAAM,CAACC,OAAP,GAAiB,SAASC,OAAT,GAAmB;EAEhC;EACA,IAAIC,MAAM,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAAb;EACA,IAAIC,KAAK,GAAG,EAAZ;EACA,IAAIC,KAAJ,EAAWC,KAAX;;EAEA,IAAI,CAACR,MAAM,CAACS,MAAZ,EAAoB;IAChB,OAAO,EAAP;EACH,CAFD,MAEO,IAAI,MAAMT,MAAM,CAACS,MAAjB,EAAyB;IAC5B,OAAOT,MAAM,CAAC,CAAD,CAAb;EACH;;EAEDQ,KAAK,GAAGR,MAAM,CAACU,GAAP,CAAW,UAASC,KAAT,EAAgB;IAC/B,IAAIC,QAAQ,GAAG,eAAe,OAAOD,KAAtB,GAA8BA,KAAK,EAAnC,GAAwCE,MAAM,CAACF,KAAK,IAAI,EAAV,CAA7D;;IAEA,IAAI,CAACC,QAAL,EAAe;MACX,OAAO,EAAP;IACH;;IAED,IAAIE,MAAM,GAAGnB,GAAG,CAACoB,KAAJ,CAAUH,QAAV,EAAoB,IAApB,CAAb;;IAEA,IAAI,CAACL,KAAD,IAAUO,MAAd,EAAsB;MAClBP,KAAK,GAAGO,MAAR;IACH;;IAEDrB,MAAM,CAACa,KAAD,EAAQQ,MAAM,CAACR,KAAf,CAAN;IACA,OAAOQ,MAAM,CAACE,QAAd;EACH,CAfO,EAeLC,MAfK,CAeE,UAASN,KAAT,EAAgB;IACtB,OAAO,CAAC,CAACA,KAAT;EACH,CAjBO,CAAR;EAmBA,OAAOJ,KAAK,CAACW,MAAb,CAhCgC,CAgCX;;EACrBX,KAAK,CAACD,KAAN,GAAcA,KAAd;EACAC,KAAK,CAACS,QAAN,GAAiBpB,IAAI,CAACuB,IAAL,CAAUC,KAAV,CAAgBxB,IAAhB,EAAsBY,KAAtB,EAA6Ba,OAA7B,CAAqC,IAAIC,MAAJ,CAAW,OAAO1B,IAAI,CAAC2B,GAAvB,EAA4B,GAA5B,CAArC,EAAuE,GAAvE,CAAjB;EACA,OAAO5B,GAAG,CAAC6B,MAAJ,CAAWjB,KAAX,CAAP;AACH,CApCD"},"metadata":{},"sourceType":"script"}