{"ast":null,"code":"\"use strict\";\n\nrequire(\"dotenv\").config();\n\nconst api = require(\"./api\");\n\nconst account = require(\"./resources/account\");\n\nconst position = require(\"./resources/position\");\n\nconst calendar = require(\"./resources/calendar\");\n\nconst clock = require(\"./resources/clock\");\n\nconst asset = require(\"./resources/asset\");\n\nconst order = require(\"./resources/order\");\n\nconst watchlist = require(\"./resources/watchlist\");\n\nconst dataV2 = require(\"./resources/datav2/rest_v2\");\n\nconst entityV2 = require(\"./resources/datav2/entityv2\");\n\nconst crypto_websocket = require(\"./resources/datav2/crypto_websocket_v2\");\n\nconst news_stream = require(\"./resources/datav2/news_websocket\");\n\nconst websockets_v2 = require(\"./resources/datav2/stock_websocket_v2\");\n\nconst websockets = require(\"./resources/websockets\");\n\nclass Alpaca {\n  constructor() {\n    let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // Helper methods\n    this.httpRequest = api.httpRequest.bind(this);\n    this.dataHttpRequest = api.dataHttpRequest; // Account\n\n    this.getAccount = account.get;\n    this.updateAccountConfigurations = account.updateConfigs;\n    this.getAccountConfigurations = account.getConfigs;\n    this.getAccountActivities = account.getActivities;\n    this.getPortfolioHistory = account.getPortfolioHistory; // Positions\n\n    this.getPositions = position.getAll;\n    this.getPosition = position.getOne;\n    this.closeAllPositions = position.closeAll;\n    this.closePosition = position.closeOne; // Calendar\n\n    this.getCalendar = calendar.get; // Clock\n\n    this.getClock = clock.get; // Asset\n\n    this.getAssets = asset.getAll;\n    this.getAsset = asset.getOne; // Order\n\n    this.getOrders = order.getAll;\n    this.getOrder = order.getOne;\n    this.getOrderByClientId = order.getByClientOrderId;\n    this.createOrder = order.post;\n    this.replaceOrder = order.patchOrder;\n    this.cancelOrder = order.cancel;\n    this.cancelAllOrders = order.cancelAll; // Watchlists\n\n    this.getWatchlists = watchlist.getAll;\n    this.getWatchlist = watchlist.getOne;\n    this.addWatchlist = watchlist.addWatchlist;\n    this.addToWatchlist = watchlist.addToWatchlist;\n    this.updateWatchlist = watchlist.updateWatchlist;\n    this.deleteWatchlist = watchlist.deleteWatchlist;\n    this.deleteFromWatchlist = watchlist.deleteFromWatchlist;\n    this.configuration = {\n      baseUrl: config.baseUrl || process.env.APCA_API_BASE_URL || (config.paper ? \"https://paper-api.alpaca.markets\" : \"https://api.alpaca.markets\"),\n      dataBaseUrl: config.dataBaseUrl || process.env.APCA_DATA_BASE_URL || process.env.DATA_PROXY_WS || \"https://data.alpaca.markets\",\n      dataStreamUrl: config.dataStreamUrl || process.env.APCA_API_STREAM_URL || \"https://stream.data.alpaca.markets\",\n      keyId: config.keyId || process.env.APCA_API_KEY_ID || \"\",\n      secretKey: config.secretKey || process.env.APCA_API_SECRET_KEY || \"\",\n      apiVersion: config.apiVersion || process.env.APCA_API_VERSION || \"v2\",\n      oauth: config.oauth || process.env.APCA_API_OAUTH || \"\",\n      feed: config.feed || \"iex\",\n      verbose: config.verbose,\n      exchanges: config.exchanges || [] // should be a string with comma separated exchanges\n      // or a list of strings\n\n    };\n    this.data_ws = new websockets.AlpacaStreamClient({\n      url: this.configuration.dataBaseUrl,\n      apiKey: this.configuration.keyId,\n      secretKey: this.configuration.secretKey,\n      oauth: this.configuration.oauth\n    });\n    this.data_ws.STATE = websockets.STATE;\n    this.data_ws.EVENT = websockets.EVENT;\n    this.data_ws.ERROR = websockets.ERROR;\n    this.trade_ws = new websockets.AlpacaStreamClient({\n      url: this.configuration.baseUrl,\n      apiKey: this.configuration.keyId,\n      secretKey: this.configuration.secretKey,\n      oauth: this.configuration.oauth\n    });\n    this.trade_ws.STATE = websockets.STATE;\n    this.trade_ws.EVENT = websockets.EVENT;\n    this.trade_ws.ERROR = websockets.ERROR;\n    this.data_stream_v2 = new websockets_v2.AlpacaStocksClient({\n      url: this.configuration.dataStreamUrl,\n      feed: this.configuration.feed,\n      apiKey: this.configuration.keyId,\n      secretKey: this.configuration.secretKey,\n      verbose: this.configuration.verbose\n    });\n    this.adjustment = dataV2.Adjustment;\n    this.timeframeUnit = entityV2.TimeFrameUnit;\n    this.crypto_stream_v2 = new crypto_websocket.AlpacaCryptoClient({\n      url: this.configuration.dataStreamUrl,\n      apiKey: this.configuration.keyId,\n      secretKey: this.configuration.secretKey,\n      exchanges: this.configuration.exchanges,\n      verbose: this.configuration.verbose\n    });\n    this.news_stream = new news_stream.AlpacaNewsCLient({\n      url: this.configuration.dataStreamUrl,\n      apiKey: this.configuration.keyId,\n      secretKey: this.configuration.secretKey,\n      verbose: this.configuration.verbose\n    });\n  }\n\n  sendRequest(endpoint, queryParams, body, method) {\n    return api.sendRequest(this.httpRequest, endpoint, queryParams, body, method);\n  } //DataV2\n\n\n  getTradesV2(symbol, options) {\n    let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.configuration;\n    return dataV2.getTrades(symbol, options, config);\n  }\n\n  getMultiTradesV2(symbols, options) {\n    let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.configuration;\n    return dataV2.getMultiTrades(symbols, options, config);\n  }\n\n  getMultiTradesAsyncV2(symbols, options) {\n    let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.configuration;\n    return dataV2.getMultiTradesAsync(symbols, options, config);\n  }\n\n  getQuotesV2(symbol, options) {\n    let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.configuration;\n    return dataV2.getQuotes(symbol, options, config);\n  }\n\n  getMultiQuotesV2(symbols, options) {\n    let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.configuration;\n    return dataV2.getMultiQuotes(symbols, options, config);\n  }\n\n  getMultiQuotesAsyncV2(symbols, options) {\n    let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.configuration;\n    return dataV2.getMultiQuotesAsync(symbols, options, config);\n  }\n\n  getBarsV2(symbol, options) {\n    let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.configuration;\n    return dataV2.getBars(symbol, options, config);\n  }\n\n  getMultiBarsV2(symbols, options) {\n    let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.configuration;\n    return dataV2.getMultiBars(symbols, options, config);\n  }\n\n  getMultiBarsAsyncV2(symbols, options) {\n    let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.configuration;\n    return dataV2.getMultiBarsAsync(symbols, options, config);\n  }\n\n  getLatestTrade(symbol) {\n    let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.configuration;\n    return dataV2.getLatestTrade(symbol, config);\n  }\n\n  getLatestTrades(symbols) {\n    let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.configuration;\n    return dataV2.getLatestTrades(symbols, config);\n  }\n\n  getLatestQuote(symbol) {\n    let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.configuration;\n    return dataV2.getLatestQuote(symbol, config);\n  }\n\n  getLatestQuotes(symbols) {\n    let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.configuration;\n    return dataV2.getLatestQuotes(symbols, config);\n  }\n\n  getLatestBar(symbol) {\n    let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.configuration;\n    return dataV2.getLatestBar(symbol, config);\n  }\n\n  getLatestBars(symbols) {\n    let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.configuration;\n    return dataV2.getLatestBars(symbols, config);\n  }\n\n  getSnapshot(symbol) {\n    let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.configuration;\n    return dataV2.getSnapshot(symbol, config);\n  }\n\n  getSnapshots(symbols) {\n    let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.configuration;\n    return dataV2.getSnapshots(symbols, config);\n  }\n\n  getCryptoTrades(symbol, options) {\n    let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.configuration;\n    return dataV2.getCryptoTrades(symbol, options, config);\n  }\n\n  getCryptoQuotes(symbol, options) {\n    let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.configuration;\n    return dataV2.getCryptoQuotes(symbol, options, config);\n  }\n\n  getCryptoBars(symbol, options) {\n    let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.configuration;\n    return dataV2.getCryptoBars(symbol, options, config);\n  }\n\n  getLatestCryptoTrade(symbol, options) {\n    let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.configuration;\n    return dataV2.getLatestCryptoTrade(symbol, options, config);\n  }\n\n  getLatestCryptoTrades(symbols, options) {\n    let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.configuration;\n    return dataV2.getLatestCryptoTrades(symbols, options, config);\n  }\n\n  getLatestCryptoQuote(symbol, options) {\n    let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.configuration;\n    return dataV2.getLatestCryptoQuote(symbol, options, config);\n  }\n\n  getLatestCryptoQuotes(symbols, options) {\n    let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.configuration;\n    return dataV2.getLatestCryptoQuotes(symbols, options, config);\n  }\n\n  getLatestCryptoBar(symbol, options) {\n    let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.configuration;\n    return dataV2.getLatestCryptoBar(symbol, options, config);\n  }\n\n  getLatestCryptoBars(symbols, options) {\n    let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.configuration;\n    return dataV2.getLatestCryptoBars(symbols, options, config);\n  }\n\n  getLatestCryptoXBBO(symbol, options) {\n    let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.configuration;\n    return dataV2.getLatestCryptoXBBO(symbol, options, config);\n  }\n\n  getLatestCryptoXBBOs(symbols, options) {\n    let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.configuration;\n    return dataV2.getLatestCryptoXBBOs(symbols, options, config);\n  }\n\n  getCryptoSnapshot(symbol, options) {\n    let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.configuration;\n    return dataV2.getCryptoSnapshot(symbol, options, config);\n  }\n\n  getCryptoSnapshots(symbols, options) {\n    let config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.configuration;\n    return dataV2.getCryptoSnapshots(symbols, options, config);\n  }\n\n  getNews(options) {\n    let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.configuration;\n    return dataV2.getNews(options, config);\n  }\n\n  newTimeframe(amount, unit) {\n    return entityV2.NewTimeframe(amount, unit);\n  }\n\n}\n\nmodule.exports = Alpaca;","map":{"version":3,"names":["require","config","api","account","position","calendar","clock","asset","order","watchlist","dataV2","entityV2","crypto_websocket","news_stream","websockets_v2","websockets","Alpaca","constructor","httpRequest","bind","dataHttpRequest","getAccount","get","updateAccountConfigurations","updateConfigs","getAccountConfigurations","getConfigs","getAccountActivities","getActivities","getPortfolioHistory","getPositions","getAll","getPosition","getOne","closeAllPositions","closeAll","closePosition","closeOne","getCalendar","getClock","getAssets","getAsset","getOrders","getOrder","getOrderByClientId","getByClientOrderId","createOrder","post","replaceOrder","patchOrder","cancelOrder","cancel","cancelAllOrders","cancelAll","getWatchlists","getWatchlist","addWatchlist","addToWatchlist","updateWatchlist","deleteWatchlist","deleteFromWatchlist","configuration","baseUrl","process","env","APCA_API_BASE_URL","paper","dataBaseUrl","APCA_DATA_BASE_URL","DATA_PROXY_WS","dataStreamUrl","APCA_API_STREAM_URL","keyId","APCA_API_KEY_ID","secretKey","APCA_API_SECRET_KEY","apiVersion","APCA_API_VERSION","oauth","APCA_API_OAUTH","feed","verbose","exchanges","data_ws","AlpacaStreamClient","url","apiKey","STATE","EVENT","ERROR","trade_ws","data_stream_v2","AlpacaStocksClient","adjustment","Adjustment","timeframeUnit","TimeFrameUnit","crypto_stream_v2","AlpacaCryptoClient","AlpacaNewsCLient","sendRequest","endpoint","queryParams","body","method","getTradesV2","symbol","options","getTrades","getMultiTradesV2","symbols","getMultiTrades","getMultiTradesAsyncV2","getMultiTradesAsync","getQuotesV2","getQuotes","getMultiQuotesV2","getMultiQuotes","getMultiQuotesAsyncV2","getMultiQuotesAsync","getBarsV2","getBars","getMultiBarsV2","getMultiBars","getMultiBarsAsyncV2","getMultiBarsAsync","getLatestTrade","getLatestTrades","getLatestQuote","getLatestQuotes","getLatestBar","getLatestBars","getSnapshot","getSnapshots","getCryptoTrades","getCryptoQuotes","getCryptoBars","getLatestCryptoTrade","getLatestCryptoTrades","getLatestCryptoQuote","getLatestCryptoQuotes","getLatestCryptoBar","getLatestCryptoBars","getLatestCryptoXBBO","getLatestCryptoXBBOs","getCryptoSnapshot","getCryptoSnapshots","getNews","newTimeframe","amount","unit","NewTimeframe","module","exports"],"sources":["/Users/matthewbrown/Desktop/code/Summer/Stock-Portfolio/stock-portfolio/node_modules/@alpacahq/alpaca-trade-api/dist/alpaca-trade-api.js"],"sourcesContent":["\"use strict\";\nrequire(\"dotenv\").config();\nconst api = require(\"./api\");\nconst account = require(\"./resources/account\");\nconst position = require(\"./resources/position\");\nconst calendar = require(\"./resources/calendar\");\nconst clock = require(\"./resources/clock\");\nconst asset = require(\"./resources/asset\");\nconst order = require(\"./resources/order\");\nconst watchlist = require(\"./resources/watchlist\");\nconst dataV2 = require(\"./resources/datav2/rest_v2\");\nconst entityV2 = require(\"./resources/datav2/entityv2\");\nconst crypto_websocket = require(\"./resources/datav2/crypto_websocket_v2\");\nconst news_stream = require(\"./resources/datav2/news_websocket\");\nconst websockets_v2 = require(\"./resources/datav2/stock_websocket_v2\");\nconst websockets = require(\"./resources/websockets\");\nclass Alpaca {\n    constructor(config = {}) {\n        // Helper methods\n        this.httpRequest = api.httpRequest.bind(this);\n        this.dataHttpRequest = api.dataHttpRequest;\n        // Account\n        this.getAccount = account.get;\n        this.updateAccountConfigurations = account.updateConfigs;\n        this.getAccountConfigurations = account.getConfigs;\n        this.getAccountActivities = account.getActivities;\n        this.getPortfolioHistory = account.getPortfolioHistory;\n        // Positions\n        this.getPositions = position.getAll;\n        this.getPosition = position.getOne;\n        this.closeAllPositions = position.closeAll;\n        this.closePosition = position.closeOne;\n        // Calendar\n        this.getCalendar = calendar.get;\n        // Clock\n        this.getClock = clock.get;\n        // Asset\n        this.getAssets = asset.getAll;\n        this.getAsset = asset.getOne;\n        // Order\n        this.getOrders = order.getAll;\n        this.getOrder = order.getOne;\n        this.getOrderByClientId = order.getByClientOrderId;\n        this.createOrder = order.post;\n        this.replaceOrder = order.patchOrder;\n        this.cancelOrder = order.cancel;\n        this.cancelAllOrders = order.cancelAll;\n        // Watchlists\n        this.getWatchlists = watchlist.getAll;\n        this.getWatchlist = watchlist.getOne;\n        this.addWatchlist = watchlist.addWatchlist;\n        this.addToWatchlist = watchlist.addToWatchlist;\n        this.updateWatchlist = watchlist.updateWatchlist;\n        this.deleteWatchlist = watchlist.deleteWatchlist;\n        this.deleteFromWatchlist = watchlist.deleteFromWatchlist;\n        this.configuration = {\n            baseUrl: config.baseUrl ||\n                process.env.APCA_API_BASE_URL ||\n                (config.paper\n                    ? \"https://paper-api.alpaca.markets\"\n                    : \"https://api.alpaca.markets\"),\n            dataBaseUrl: config.dataBaseUrl ||\n                process.env.APCA_DATA_BASE_URL ||\n                process.env.DATA_PROXY_WS ||\n                \"https://data.alpaca.markets\",\n            dataStreamUrl: config.dataStreamUrl ||\n                process.env.APCA_API_STREAM_URL ||\n                \"https://stream.data.alpaca.markets\",\n            keyId: config.keyId || process.env.APCA_API_KEY_ID || \"\",\n            secretKey: config.secretKey || process.env.APCA_API_SECRET_KEY || \"\",\n            apiVersion: config.apiVersion || process.env.APCA_API_VERSION || \"v2\",\n            oauth: config.oauth || process.env.APCA_API_OAUTH || \"\",\n            feed: config.feed || \"iex\",\n            verbose: config.verbose,\n            exchanges: config.exchanges || [], // should be a string with comma separated exchanges\n            // or a list of strings\n        };\n        this.data_ws = new websockets.AlpacaStreamClient({\n            url: this.configuration.dataBaseUrl,\n            apiKey: this.configuration.keyId,\n            secretKey: this.configuration.secretKey,\n            oauth: this.configuration.oauth,\n        });\n        this.data_ws.STATE = websockets.STATE;\n        this.data_ws.EVENT = websockets.EVENT;\n        this.data_ws.ERROR = websockets.ERROR;\n        this.trade_ws = new websockets.AlpacaStreamClient({\n            url: this.configuration.baseUrl,\n            apiKey: this.configuration.keyId,\n            secretKey: this.configuration.secretKey,\n            oauth: this.configuration.oauth,\n        });\n        this.trade_ws.STATE = websockets.STATE;\n        this.trade_ws.EVENT = websockets.EVENT;\n        this.trade_ws.ERROR = websockets.ERROR;\n        this.data_stream_v2 = new websockets_v2.AlpacaStocksClient({\n            url: this.configuration.dataStreamUrl,\n            feed: this.configuration.feed,\n            apiKey: this.configuration.keyId,\n            secretKey: this.configuration.secretKey,\n            verbose: this.configuration.verbose,\n        });\n        this.adjustment = dataV2.Adjustment;\n        this.timeframeUnit = entityV2.TimeFrameUnit;\n        this.crypto_stream_v2 = new crypto_websocket.AlpacaCryptoClient({\n            url: this.configuration.dataStreamUrl,\n            apiKey: this.configuration.keyId,\n            secretKey: this.configuration.secretKey,\n            exchanges: this.configuration.exchanges,\n            verbose: this.configuration.verbose,\n        });\n        this.news_stream = new news_stream.AlpacaNewsCLient({\n            url: this.configuration.dataStreamUrl,\n            apiKey: this.configuration.keyId,\n            secretKey: this.configuration.secretKey,\n            verbose: this.configuration.verbose,\n        });\n    }\n    sendRequest(endpoint, queryParams, body, method) {\n        return api.sendRequest(this.httpRequest, endpoint, queryParams, body, method);\n    }\n    //DataV2\n    getTradesV2(symbol, options, config = this.configuration) {\n        return dataV2.getTrades(symbol, options, config);\n    }\n    getMultiTradesV2(symbols, options, config = this.configuration) {\n        return dataV2.getMultiTrades(symbols, options, config);\n    }\n    getMultiTradesAsyncV2(symbols, options, config = this.configuration) {\n        return dataV2.getMultiTradesAsync(symbols, options, config);\n    }\n    getQuotesV2(symbol, options, config = this.configuration) {\n        return dataV2.getQuotes(symbol, options, config);\n    }\n    getMultiQuotesV2(symbols, options, config = this.configuration) {\n        return dataV2.getMultiQuotes(symbols, options, config);\n    }\n    getMultiQuotesAsyncV2(symbols, options, config = this.configuration) {\n        return dataV2.getMultiQuotesAsync(symbols, options, config);\n    }\n    getBarsV2(symbol, options, config = this.configuration) {\n        return dataV2.getBars(symbol, options, config);\n    }\n    getMultiBarsV2(symbols, options, config = this.configuration) {\n        return dataV2.getMultiBars(symbols, options, config);\n    }\n    getMultiBarsAsyncV2(symbols, options, config = this.configuration) {\n        return dataV2.getMultiBarsAsync(symbols, options, config);\n    }\n    getLatestTrade(symbol, config = this.configuration) {\n        return dataV2.getLatestTrade(symbol, config);\n    }\n    getLatestTrades(symbols, config = this.configuration) {\n        return dataV2.getLatestTrades(symbols, config);\n    }\n    getLatestQuote(symbol, config = this.configuration) {\n        return dataV2.getLatestQuote(symbol, config);\n    }\n    getLatestQuotes(symbols, config = this.configuration) {\n        return dataV2.getLatestQuotes(symbols, config);\n    }\n    getLatestBar(symbol, config = this.configuration) {\n        return dataV2.getLatestBar(symbol, config);\n    }\n    getLatestBars(symbols, config = this.configuration) {\n        return dataV2.getLatestBars(symbols, config);\n    }\n    getSnapshot(symbol, config = this.configuration) {\n        return dataV2.getSnapshot(symbol, config);\n    }\n    getSnapshots(symbols, config = this.configuration) {\n        return dataV2.getSnapshots(symbols, config);\n    }\n    getCryptoTrades(symbol, options, config = this.configuration) {\n        return dataV2.getCryptoTrades(symbol, options, config);\n    }\n    getCryptoQuotes(symbol, options, config = this.configuration) {\n        return dataV2.getCryptoQuotes(symbol, options, config);\n    }\n    getCryptoBars(symbol, options, config = this.configuration) {\n        return dataV2.getCryptoBars(symbol, options, config);\n    }\n    getLatestCryptoTrade(symbol, options, config = this.configuration) {\n        return dataV2.getLatestCryptoTrade(symbol, options, config);\n    }\n    getLatestCryptoTrades(symbols, options, config = this.configuration) {\n        return dataV2.getLatestCryptoTrades(symbols, options, config);\n    }\n    getLatestCryptoQuote(symbol, options, config = this.configuration) {\n        return dataV2.getLatestCryptoQuote(symbol, options, config);\n    }\n    getLatestCryptoQuotes(symbols, options, config = this.configuration) {\n        return dataV2.getLatestCryptoQuotes(symbols, options, config);\n    }\n    getLatestCryptoBar(symbol, options, config = this.configuration) {\n        return dataV2.getLatestCryptoBar(symbol, options, config);\n    }\n    getLatestCryptoBars(symbols, options, config = this.configuration) {\n        return dataV2.getLatestCryptoBars(symbols, options, config);\n    }\n    getLatestCryptoXBBO(symbol, options, config = this.configuration) {\n        return dataV2.getLatestCryptoXBBO(symbol, options, config);\n    }\n    getLatestCryptoXBBOs(symbols, options, config = this.configuration) {\n        return dataV2.getLatestCryptoXBBOs(symbols, options, config);\n    }\n    getCryptoSnapshot(symbol, options, config = this.configuration) {\n        return dataV2.getCryptoSnapshot(symbol, options, config);\n    }\n    getCryptoSnapshots(symbols, options, config = this.configuration) {\n        return dataV2.getCryptoSnapshots(symbols, options, config);\n    }\n    getNews(options, config = this.configuration) {\n        return dataV2.getNews(options, config);\n    }\n    newTimeframe(amount, unit) {\n        return entityV2.NewTimeframe(amount, unit);\n    }\n}\nmodule.exports = Alpaca;\n"],"mappings":"AAAA;;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,MAAMC,GAAG,GAAGF,OAAO,CAAC,OAAD,CAAnB;;AACA,MAAMG,OAAO,GAAGH,OAAO,CAAC,qBAAD,CAAvB;;AACA,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,sBAAD,CAAxB;;AACA,MAAMK,QAAQ,GAAGL,OAAO,CAAC,sBAAD,CAAxB;;AACA,MAAMM,KAAK,GAAGN,OAAO,CAAC,mBAAD,CAArB;;AACA,MAAMO,KAAK,GAAGP,OAAO,CAAC,mBAAD,CAArB;;AACA,MAAMQ,KAAK,GAAGR,OAAO,CAAC,mBAAD,CAArB;;AACA,MAAMS,SAAS,GAAGT,OAAO,CAAC,uBAAD,CAAzB;;AACA,MAAMU,MAAM,GAAGV,OAAO,CAAC,4BAAD,CAAtB;;AACA,MAAMW,QAAQ,GAAGX,OAAO,CAAC,6BAAD,CAAxB;;AACA,MAAMY,gBAAgB,GAAGZ,OAAO,CAAC,wCAAD,CAAhC;;AACA,MAAMa,WAAW,GAAGb,OAAO,CAAC,mCAAD,CAA3B;;AACA,MAAMc,aAAa,GAAGd,OAAO,CAAC,uCAAD,CAA7B;;AACA,MAAMe,UAAU,GAAGf,OAAO,CAAC,wBAAD,CAA1B;;AACA,MAAMgB,MAAN,CAAa;EACTC,WAAW,GAAc;IAAA,IAAbhB,MAAa,uEAAJ,EAAI;IACrB;IACA,KAAKiB,WAAL,GAAmBhB,GAAG,CAACgB,WAAJ,CAAgBC,IAAhB,CAAqB,IAArB,CAAnB;IACA,KAAKC,eAAL,GAAuBlB,GAAG,CAACkB,eAA3B,CAHqB,CAIrB;;IACA,KAAKC,UAAL,GAAkBlB,OAAO,CAACmB,GAA1B;IACA,KAAKC,2BAAL,GAAmCpB,OAAO,CAACqB,aAA3C;IACA,KAAKC,wBAAL,GAAgCtB,OAAO,CAACuB,UAAxC;IACA,KAAKC,oBAAL,GAA4BxB,OAAO,CAACyB,aAApC;IACA,KAAKC,mBAAL,GAA2B1B,OAAO,CAAC0B,mBAAnC,CATqB,CAUrB;;IACA,KAAKC,YAAL,GAAoB1B,QAAQ,CAAC2B,MAA7B;IACA,KAAKC,WAAL,GAAmB5B,QAAQ,CAAC6B,MAA5B;IACA,KAAKC,iBAAL,GAAyB9B,QAAQ,CAAC+B,QAAlC;IACA,KAAKC,aAAL,GAAqBhC,QAAQ,CAACiC,QAA9B,CAdqB,CAerB;;IACA,KAAKC,WAAL,GAAmBjC,QAAQ,CAACiB,GAA5B,CAhBqB,CAiBrB;;IACA,KAAKiB,QAAL,GAAgBjC,KAAK,CAACgB,GAAtB,CAlBqB,CAmBrB;;IACA,KAAKkB,SAAL,GAAiBjC,KAAK,CAACwB,MAAvB;IACA,KAAKU,QAAL,GAAgBlC,KAAK,CAAC0B,MAAtB,CArBqB,CAsBrB;;IACA,KAAKS,SAAL,GAAiBlC,KAAK,CAACuB,MAAvB;IACA,KAAKY,QAAL,GAAgBnC,KAAK,CAACyB,MAAtB;IACA,KAAKW,kBAAL,GAA0BpC,KAAK,CAACqC,kBAAhC;IACA,KAAKC,WAAL,GAAmBtC,KAAK,CAACuC,IAAzB;IACA,KAAKC,YAAL,GAAoBxC,KAAK,CAACyC,UAA1B;IACA,KAAKC,WAAL,GAAmB1C,KAAK,CAAC2C,MAAzB;IACA,KAAKC,eAAL,GAAuB5C,KAAK,CAAC6C,SAA7B,CA7BqB,CA8BrB;;IACA,KAAKC,aAAL,GAAqB7C,SAAS,CAACsB,MAA/B;IACA,KAAKwB,YAAL,GAAoB9C,SAAS,CAACwB,MAA9B;IACA,KAAKuB,YAAL,GAAoB/C,SAAS,CAAC+C,YAA9B;IACA,KAAKC,cAAL,GAAsBhD,SAAS,CAACgD,cAAhC;IACA,KAAKC,eAAL,GAAuBjD,SAAS,CAACiD,eAAjC;IACA,KAAKC,eAAL,GAAuBlD,SAAS,CAACkD,eAAjC;IACA,KAAKC,mBAAL,GAA2BnD,SAAS,CAACmD,mBAArC;IACA,KAAKC,aAAL,GAAqB;MACjBC,OAAO,EAAE7D,MAAM,CAAC6D,OAAP,IACLC,OAAO,CAACC,GAAR,CAAYC,iBADP,KAEJhE,MAAM,CAACiE,KAAP,GACK,kCADL,GAEK,4BAJD,CADQ;MAMjBC,WAAW,EAAElE,MAAM,CAACkE,WAAP,IACTJ,OAAO,CAACC,GAAR,CAAYI,kBADH,IAETL,OAAO,CAACC,GAAR,CAAYK,aAFH,IAGT,6BATa;MAUjBC,aAAa,EAAErE,MAAM,CAACqE,aAAP,IACXP,OAAO,CAACC,GAAR,CAAYO,mBADD,IAEX,oCAZa;MAajBC,KAAK,EAAEvE,MAAM,CAACuE,KAAP,IAAgBT,OAAO,CAACC,GAAR,CAAYS,eAA5B,IAA+C,EAbrC;MAcjBC,SAAS,EAAEzE,MAAM,CAACyE,SAAP,IAAoBX,OAAO,CAACC,GAAR,CAAYW,mBAAhC,IAAuD,EAdjD;MAejBC,UAAU,EAAE3E,MAAM,CAAC2E,UAAP,IAAqBb,OAAO,CAACC,GAAR,CAAYa,gBAAjC,IAAqD,IAfhD;MAgBjBC,KAAK,EAAE7E,MAAM,CAAC6E,KAAP,IAAgBf,OAAO,CAACC,GAAR,CAAYe,cAA5B,IAA8C,EAhBpC;MAiBjBC,IAAI,EAAE/E,MAAM,CAAC+E,IAAP,IAAe,KAjBJ;MAkBjBC,OAAO,EAAEhF,MAAM,CAACgF,OAlBC;MAmBjBC,SAAS,EAAEjF,MAAM,CAACiF,SAAP,IAAoB,EAnBd,CAmBkB;MACnC;;IApBiB,CAArB;IAsBA,KAAKC,OAAL,GAAe,IAAIpE,UAAU,CAACqE,kBAAf,CAAkC;MAC7CC,GAAG,EAAE,KAAKxB,aAAL,CAAmBM,WADqB;MAE7CmB,MAAM,EAAE,KAAKzB,aAAL,CAAmBW,KAFkB;MAG7CE,SAAS,EAAE,KAAKb,aAAL,CAAmBa,SAHe;MAI7CI,KAAK,EAAE,KAAKjB,aAAL,CAAmBiB;IAJmB,CAAlC,CAAf;IAMA,KAAKK,OAAL,CAAaI,KAAb,GAAqBxE,UAAU,CAACwE,KAAhC;IACA,KAAKJ,OAAL,CAAaK,KAAb,GAAqBzE,UAAU,CAACyE,KAAhC;IACA,KAAKL,OAAL,CAAaM,KAAb,GAAqB1E,UAAU,CAAC0E,KAAhC;IACA,KAAKC,QAAL,GAAgB,IAAI3E,UAAU,CAACqE,kBAAf,CAAkC;MAC9CC,GAAG,EAAE,KAAKxB,aAAL,CAAmBC,OADsB;MAE9CwB,MAAM,EAAE,KAAKzB,aAAL,CAAmBW,KAFmB;MAG9CE,SAAS,EAAE,KAAKb,aAAL,CAAmBa,SAHgB;MAI9CI,KAAK,EAAE,KAAKjB,aAAL,CAAmBiB;IAJoB,CAAlC,CAAhB;IAMA,KAAKY,QAAL,CAAcH,KAAd,GAAsBxE,UAAU,CAACwE,KAAjC;IACA,KAAKG,QAAL,CAAcF,KAAd,GAAsBzE,UAAU,CAACyE,KAAjC;IACA,KAAKE,QAAL,CAAcD,KAAd,GAAsB1E,UAAU,CAAC0E,KAAjC;IACA,KAAKE,cAAL,GAAsB,IAAI7E,aAAa,CAAC8E,kBAAlB,CAAqC;MACvDP,GAAG,EAAE,KAAKxB,aAAL,CAAmBS,aAD+B;MAEvDU,IAAI,EAAE,KAAKnB,aAAL,CAAmBmB,IAF8B;MAGvDM,MAAM,EAAE,KAAKzB,aAAL,CAAmBW,KAH4B;MAIvDE,SAAS,EAAE,KAAKb,aAAL,CAAmBa,SAJyB;MAKvDO,OAAO,EAAE,KAAKpB,aAAL,CAAmBoB;IAL2B,CAArC,CAAtB;IAOA,KAAKY,UAAL,GAAkBnF,MAAM,CAACoF,UAAzB;IACA,KAAKC,aAAL,GAAqBpF,QAAQ,CAACqF,aAA9B;IACA,KAAKC,gBAAL,GAAwB,IAAIrF,gBAAgB,CAACsF,kBAArB,CAAwC;MAC5Db,GAAG,EAAE,KAAKxB,aAAL,CAAmBS,aADoC;MAE5DgB,MAAM,EAAE,KAAKzB,aAAL,CAAmBW,KAFiC;MAG5DE,SAAS,EAAE,KAAKb,aAAL,CAAmBa,SAH8B;MAI5DQ,SAAS,EAAE,KAAKrB,aAAL,CAAmBqB,SAJ8B;MAK5DD,OAAO,EAAE,KAAKpB,aAAL,CAAmBoB;IALgC,CAAxC,CAAxB;IAOA,KAAKpE,WAAL,GAAmB,IAAIA,WAAW,CAACsF,gBAAhB,CAAiC;MAChDd,GAAG,EAAE,KAAKxB,aAAL,CAAmBS,aADwB;MAEhDgB,MAAM,EAAE,KAAKzB,aAAL,CAAmBW,KAFqB;MAGhDE,SAAS,EAAE,KAAKb,aAAL,CAAmBa,SAHkB;MAIhDO,OAAO,EAAE,KAAKpB,aAAL,CAAmBoB;IAJoB,CAAjC,CAAnB;EAMH;;EACDmB,WAAW,CAACC,QAAD,EAAWC,WAAX,EAAwBC,IAAxB,EAA8BC,MAA9B,EAAsC;IAC7C,OAAOtG,GAAG,CAACkG,WAAJ,CAAgB,KAAKlF,WAArB,EAAkCmF,QAAlC,EAA4CC,WAA5C,EAAyDC,IAAzD,EAA+DC,MAA/D,CAAP;EACH,CAxGQ,CAyGT;;;EACAC,WAAW,CAACC,MAAD,EAASC,OAAT,EAA+C;IAAA,IAA7B1G,MAA6B,uEAApB,KAAK4D,aAAe;IACtD,OAAOnD,MAAM,CAACkG,SAAP,CAAiBF,MAAjB,EAAyBC,OAAzB,EAAkC1G,MAAlC,CAAP;EACH;;EACD4G,gBAAgB,CAACC,OAAD,EAAUH,OAAV,EAAgD;IAAA,IAA7B1G,MAA6B,uEAApB,KAAK4D,aAAe;IAC5D,OAAOnD,MAAM,CAACqG,cAAP,CAAsBD,OAAtB,EAA+BH,OAA/B,EAAwC1G,MAAxC,CAAP;EACH;;EACD+G,qBAAqB,CAACF,OAAD,EAAUH,OAAV,EAAgD;IAAA,IAA7B1G,MAA6B,uEAApB,KAAK4D,aAAe;IACjE,OAAOnD,MAAM,CAACuG,mBAAP,CAA2BH,OAA3B,EAAoCH,OAApC,EAA6C1G,MAA7C,CAAP;EACH;;EACDiH,WAAW,CAACR,MAAD,EAASC,OAAT,EAA+C;IAAA,IAA7B1G,MAA6B,uEAApB,KAAK4D,aAAe;IACtD,OAAOnD,MAAM,CAACyG,SAAP,CAAiBT,MAAjB,EAAyBC,OAAzB,EAAkC1G,MAAlC,CAAP;EACH;;EACDmH,gBAAgB,CAACN,OAAD,EAAUH,OAAV,EAAgD;IAAA,IAA7B1G,MAA6B,uEAApB,KAAK4D,aAAe;IAC5D,OAAOnD,MAAM,CAAC2G,cAAP,CAAsBP,OAAtB,EAA+BH,OAA/B,EAAwC1G,MAAxC,CAAP;EACH;;EACDqH,qBAAqB,CAACR,OAAD,EAAUH,OAAV,EAAgD;IAAA,IAA7B1G,MAA6B,uEAApB,KAAK4D,aAAe;IACjE,OAAOnD,MAAM,CAAC6G,mBAAP,CAA2BT,OAA3B,EAAoCH,OAApC,EAA6C1G,MAA7C,CAAP;EACH;;EACDuH,SAAS,CAACd,MAAD,EAASC,OAAT,EAA+C;IAAA,IAA7B1G,MAA6B,uEAApB,KAAK4D,aAAe;IACpD,OAAOnD,MAAM,CAAC+G,OAAP,CAAef,MAAf,EAAuBC,OAAvB,EAAgC1G,MAAhC,CAAP;EACH;;EACDyH,cAAc,CAACZ,OAAD,EAAUH,OAAV,EAAgD;IAAA,IAA7B1G,MAA6B,uEAApB,KAAK4D,aAAe;IAC1D,OAAOnD,MAAM,CAACiH,YAAP,CAAoBb,OAApB,EAA6BH,OAA7B,EAAsC1G,MAAtC,CAAP;EACH;;EACD2H,mBAAmB,CAACd,OAAD,EAAUH,OAAV,EAAgD;IAAA,IAA7B1G,MAA6B,uEAApB,KAAK4D,aAAe;IAC/D,OAAOnD,MAAM,CAACmH,iBAAP,CAAyBf,OAAzB,EAAkCH,OAAlC,EAA2C1G,MAA3C,CAAP;EACH;;EACD6H,cAAc,CAACpB,MAAD,EAAsC;IAAA,IAA7BzG,MAA6B,uEAApB,KAAK4D,aAAe;IAChD,OAAOnD,MAAM,CAACoH,cAAP,CAAsBpB,MAAtB,EAA8BzG,MAA9B,CAAP;EACH;;EACD8H,eAAe,CAACjB,OAAD,EAAuC;IAAA,IAA7B7G,MAA6B,uEAApB,KAAK4D,aAAe;IAClD,OAAOnD,MAAM,CAACqH,eAAP,CAAuBjB,OAAvB,EAAgC7G,MAAhC,CAAP;EACH;;EACD+H,cAAc,CAACtB,MAAD,EAAsC;IAAA,IAA7BzG,MAA6B,uEAApB,KAAK4D,aAAe;IAChD,OAAOnD,MAAM,CAACsH,cAAP,CAAsBtB,MAAtB,EAA8BzG,MAA9B,CAAP;EACH;;EACDgI,eAAe,CAACnB,OAAD,EAAuC;IAAA,IAA7B7G,MAA6B,uEAApB,KAAK4D,aAAe;IAClD,OAAOnD,MAAM,CAACuH,eAAP,CAAuBnB,OAAvB,EAAgC7G,MAAhC,CAAP;EACH;;EACDiI,YAAY,CAACxB,MAAD,EAAsC;IAAA,IAA7BzG,MAA6B,uEAApB,KAAK4D,aAAe;IAC9C,OAAOnD,MAAM,CAACwH,YAAP,CAAoBxB,MAApB,EAA4BzG,MAA5B,CAAP;EACH;;EACDkI,aAAa,CAACrB,OAAD,EAAuC;IAAA,IAA7B7G,MAA6B,uEAApB,KAAK4D,aAAe;IAChD,OAAOnD,MAAM,CAACyH,aAAP,CAAqBrB,OAArB,EAA8B7G,MAA9B,CAAP;EACH;;EACDmI,WAAW,CAAC1B,MAAD,EAAsC;IAAA,IAA7BzG,MAA6B,uEAApB,KAAK4D,aAAe;IAC7C,OAAOnD,MAAM,CAAC0H,WAAP,CAAmB1B,MAAnB,EAA2BzG,MAA3B,CAAP;EACH;;EACDoI,YAAY,CAACvB,OAAD,EAAuC;IAAA,IAA7B7G,MAA6B,uEAApB,KAAK4D,aAAe;IAC/C,OAAOnD,MAAM,CAAC2H,YAAP,CAAoBvB,OAApB,EAA6B7G,MAA7B,CAAP;EACH;;EACDqI,eAAe,CAAC5B,MAAD,EAASC,OAAT,EAA+C;IAAA,IAA7B1G,MAA6B,uEAApB,KAAK4D,aAAe;IAC1D,OAAOnD,MAAM,CAAC4H,eAAP,CAAuB5B,MAAvB,EAA+BC,OAA/B,EAAwC1G,MAAxC,CAAP;EACH;;EACDsI,eAAe,CAAC7B,MAAD,EAASC,OAAT,EAA+C;IAAA,IAA7B1G,MAA6B,uEAApB,KAAK4D,aAAe;IAC1D,OAAOnD,MAAM,CAAC6H,eAAP,CAAuB7B,MAAvB,EAA+BC,OAA/B,EAAwC1G,MAAxC,CAAP;EACH;;EACDuI,aAAa,CAAC9B,MAAD,EAASC,OAAT,EAA+C;IAAA,IAA7B1G,MAA6B,uEAApB,KAAK4D,aAAe;IACxD,OAAOnD,MAAM,CAAC8H,aAAP,CAAqB9B,MAArB,EAA6BC,OAA7B,EAAsC1G,MAAtC,CAAP;EACH;;EACDwI,oBAAoB,CAAC/B,MAAD,EAASC,OAAT,EAA+C;IAAA,IAA7B1G,MAA6B,uEAApB,KAAK4D,aAAe;IAC/D,OAAOnD,MAAM,CAAC+H,oBAAP,CAA4B/B,MAA5B,EAAoCC,OAApC,EAA6C1G,MAA7C,CAAP;EACH;;EACDyI,qBAAqB,CAAC5B,OAAD,EAAUH,OAAV,EAAgD;IAAA,IAA7B1G,MAA6B,uEAApB,KAAK4D,aAAe;IACjE,OAAOnD,MAAM,CAACgI,qBAAP,CAA6B5B,OAA7B,EAAsCH,OAAtC,EAA+C1G,MAA/C,CAAP;EACH;;EACD0I,oBAAoB,CAACjC,MAAD,EAASC,OAAT,EAA+C;IAAA,IAA7B1G,MAA6B,uEAApB,KAAK4D,aAAe;IAC/D,OAAOnD,MAAM,CAACiI,oBAAP,CAA4BjC,MAA5B,EAAoCC,OAApC,EAA6C1G,MAA7C,CAAP;EACH;;EACD2I,qBAAqB,CAAC9B,OAAD,EAAUH,OAAV,EAAgD;IAAA,IAA7B1G,MAA6B,uEAApB,KAAK4D,aAAe;IACjE,OAAOnD,MAAM,CAACkI,qBAAP,CAA6B9B,OAA7B,EAAsCH,OAAtC,EAA+C1G,MAA/C,CAAP;EACH;;EACD4I,kBAAkB,CAACnC,MAAD,EAASC,OAAT,EAA+C;IAAA,IAA7B1G,MAA6B,uEAApB,KAAK4D,aAAe;IAC7D,OAAOnD,MAAM,CAACmI,kBAAP,CAA0BnC,MAA1B,EAAkCC,OAAlC,EAA2C1G,MAA3C,CAAP;EACH;;EACD6I,mBAAmB,CAAChC,OAAD,EAAUH,OAAV,EAAgD;IAAA,IAA7B1G,MAA6B,uEAApB,KAAK4D,aAAe;IAC/D,OAAOnD,MAAM,CAACoI,mBAAP,CAA2BhC,OAA3B,EAAoCH,OAApC,EAA6C1G,MAA7C,CAAP;EACH;;EACD8I,mBAAmB,CAACrC,MAAD,EAASC,OAAT,EAA+C;IAAA,IAA7B1G,MAA6B,uEAApB,KAAK4D,aAAe;IAC9D,OAAOnD,MAAM,CAACqI,mBAAP,CAA2BrC,MAA3B,EAAmCC,OAAnC,EAA4C1G,MAA5C,CAAP;EACH;;EACD+I,oBAAoB,CAAClC,OAAD,EAAUH,OAAV,EAAgD;IAAA,IAA7B1G,MAA6B,uEAApB,KAAK4D,aAAe;IAChE,OAAOnD,MAAM,CAACsI,oBAAP,CAA4BlC,OAA5B,EAAqCH,OAArC,EAA8C1G,MAA9C,CAAP;EACH;;EACDgJ,iBAAiB,CAACvC,MAAD,EAASC,OAAT,EAA+C;IAAA,IAA7B1G,MAA6B,uEAApB,KAAK4D,aAAe;IAC5D,OAAOnD,MAAM,CAACuI,iBAAP,CAAyBvC,MAAzB,EAAiCC,OAAjC,EAA0C1G,MAA1C,CAAP;EACH;;EACDiJ,kBAAkB,CAACpC,OAAD,EAAUH,OAAV,EAAgD;IAAA,IAA7B1G,MAA6B,uEAApB,KAAK4D,aAAe;IAC9D,OAAOnD,MAAM,CAACwI,kBAAP,CAA0BpC,OAA1B,EAAmCH,OAAnC,EAA4C1G,MAA5C,CAAP;EACH;;EACDkJ,OAAO,CAACxC,OAAD,EAAuC;IAAA,IAA7B1G,MAA6B,uEAApB,KAAK4D,aAAe;IAC1C,OAAOnD,MAAM,CAACyI,OAAP,CAAexC,OAAf,EAAwB1G,MAAxB,CAAP;EACH;;EACDmJ,YAAY,CAACC,MAAD,EAASC,IAAT,EAAe;IACvB,OAAO3I,QAAQ,CAAC4I,YAAT,CAAsBF,MAAtB,EAA8BC,IAA9B,CAAP;EACH;;AAzMQ;;AA2MbE,MAAM,CAACC,OAAP,GAAiBzI,MAAjB"},"metadata":{},"sourceType":"script"}