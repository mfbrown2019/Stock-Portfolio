{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AlpacaCryptoClient = void 0;\n\nconst entityv2_1 = require(\"./entityv2\");\n\nconst websocket_1 = require(\"./websocket\");\n\nclass AlpacaCryptoClient extends websocket_1.AlpacaWebsocket {\n  constructor(options) {\n    const url = options.url.replace(\"https\", \"wss\") + \"/v1beta1/crypto\";\n    const exchanges = Array.isArray(options.exchanges) ? options.exchanges.join(\",\") : options.exchanges;\n    options.url = `${url}?exchanges=${exchanges}`;\n    options.subscriptions = {\n      trades: [],\n      quotes: [],\n      bars: [],\n      updatedBars: [],\n      dailyBars: [],\n      orderbooks: []\n    };\n    super(options);\n  }\n\n  subscribeForTrades(trades) {\n    this.session.subscriptions.trades.push(...trades);\n    this.subscribe({\n      trades\n    });\n  }\n\n  subscribeForQuotes(quotes) {\n    this.session.subscriptions.quotes.push(...quotes);\n    this.subscribe({\n      quotes\n    });\n  }\n\n  subscribeForBars(bars) {\n    this.session.subscriptions.bars.push(...bars);\n    this.subscribe({\n      bars\n    });\n  }\n\n  subscribeForUpdatedBars(updatedBars) {\n    this.session.subscriptions.updatedBars.push(...updatedBars);\n    this.subscribe({\n      updatedBars\n    });\n  }\n\n  subscribeForDailyBars(dailyBars) {\n    this.session.subscriptions.dailyBars.push(...dailyBars);\n    this.subscribe({\n      dailyBars\n    });\n  }\n\n  subscribeForOrderbooks(orderbooks) {\n    this.session.subscriptions.orderbooks.push(...orderbooks);\n    this.subscribe({\n      orderbooks\n    });\n  }\n\n  subscribe(symbols) {\n    var _a, _b, _c, _d, _e, _f;\n\n    const subMsg = {\n      action: \"subscribe\",\n      trades: (_a = symbols.trades) !== null && _a !== void 0 ? _a : [],\n      quotes: (_b = symbols.quotes) !== null && _b !== void 0 ? _b : [],\n      bars: (_c = symbols.bars) !== null && _c !== void 0 ? _c : [],\n      updatedBars: (_d = symbols.updatedBars) !== null && _d !== void 0 ? _d : [],\n      dailyBars: (_e = symbols.dailyBars) !== null && _e !== void 0 ? _e : [],\n      orderbooks: (_f = symbols.orderbooks) !== null && _f !== void 0 ? _f : []\n    };\n    this.conn.send(this.msgpack.encode(subMsg));\n  }\n\n  subscribeAll() {\n    const {\n      trades,\n      quotes,\n      bars,\n      updatedBars,\n      dailyBars,\n      orderbooks\n    } = this.session.subscriptions;\n\n    if (trades.length > 0 || quotes.length > 0 || bars.length > 0 || updatedBars.length > 0 || dailyBars.length > 0 || orderbooks.length > 0) {\n      const msg = {\n        action: \"subscribe\",\n        trades,\n        quotes,\n        bars,\n        updatedBars,\n        dailyBars,\n        orderbooks\n      };\n      this.conn.send(this.msgpack.encode(msg));\n    }\n  }\n\n  unsubscribeFromTrades(trades) {\n    this.session.subscriptions.trades = this.session.subscriptions.trades.filter(trade => !trades.includes(trade));\n    this.unsubscribe({\n      trades\n    });\n  }\n\n  unsubscribeFromQuotes(quotes) {\n    this.session.subscriptions.quotes = this.session.subscriptions.quotes.filter(quote => !quotes.includes(quote));\n    this.unsubscribe({\n      quotes\n    });\n  }\n\n  unsubscribeFromBars(bars) {\n    this.session.subscriptions.bars = this.session.subscriptions.bars.filter(bar => !bars.includes(bar));\n    this.unsubscribe({\n      bars\n    });\n  }\n\n  unsubscribeFromUpdatedBars(updatedBars) {\n    this.session.subscriptions.updatedBars = this.session.subscriptions.updatedBars.filter(updatedBar => !updatedBars.includes(updatedBar));\n    this.unsubscribe({\n      updatedBars\n    });\n  }\n\n  unsubscriceFromDailyBars(dailyBars) {\n    this.session.subscriptions.dailyBars = this.session.subscriptions.dailyBars.filter(dailyBar => !dailyBars.includes(dailyBar));\n    this.unsubscribe({\n      dailyBars\n    });\n  }\n\n  unsubscribeFromOrderbooks(orderbooks) {\n    this.session.subscriptions.orderbooks = this.session.subscriptions.orderbooks.filter(orderbook => !orderbooks.includes(orderbook));\n    this.unsubscribe({\n      orderbooks\n    });\n  }\n\n  unsubscribe(symbols) {\n    var _a, _b, _c, _d, _e, _f;\n\n    const unsubMsg = {\n      action: \"unsubscribe\",\n      trades: (_a = symbols.trades) !== null && _a !== void 0 ? _a : [],\n      quotes: (_b = symbols.quotes) !== null && _b !== void 0 ? _b : [],\n      bars: (_c = symbols.bars) !== null && _c !== void 0 ? _c : [],\n      updatedBars: (_d = symbols.updatedBars) !== null && _d !== void 0 ? _d : [],\n      dailyBars: (_e = symbols.dailyBars) !== null && _e !== void 0 ? _e : [],\n      orderbooks: (_f = symbols.orderbooks) !== null && _f !== void 0 ? _f : []\n    };\n    this.conn.send(this.msgpack.encode(unsubMsg));\n  }\n\n  updateSubscriptions(msg) {\n    this.session.subscriptions = {\n      trades: msg.trades,\n      quotes: msg.quotes,\n      bars: msg.bars,\n      updatedBars: msg.updatedBars,\n      dailyBars: msg.dailyBars,\n      orderbooks: msg.orderbooks\n    };\n    this.log(`listening to streams:\n        ${JSON.stringify(this.session.subscriptions)}`);\n  }\n\n  onCryptoTrade(fn) {\n    this.on(websocket_1.EVENT.TRADES, trade => fn(trade));\n  }\n\n  onCryptoQuote(fn) {\n    this.on(websocket_1.EVENT.QUOTES, quote => fn(quote));\n  }\n\n  onCryptoBar(fn) {\n    this.on(websocket_1.EVENT.BARS, bar => fn(bar));\n  }\n\n  onCryptoUpdatedBar(fn) {\n    this.on(websocket_1.EVENT.UPDATED_BARS, updatedBar => fn(updatedBar));\n  }\n\n  onCryptoDailyBar(fn) {\n    this.on(websocket_1.EVENT.DAILY_BARS, dailyBar => fn(dailyBar));\n  }\n\n  onCryptoOrderbook(fn) {\n    this.on(websocket_1.EVENT.ORDERBOOKS, orderbook => fn(orderbook));\n  }\n\n  dataHandler(data) {\n    data.forEach(element => {\n      if (\"T\" in element) {\n        switch (element.T) {\n          case \"t\":\n            this.emit(websocket_1.EVENT.TRADES, (0, entityv2_1.AlpacaCryptoTrade)(element));\n            break;\n\n          case \"q\":\n            this.emit(websocket_1.EVENT.QUOTES, (0, entityv2_1.AlpacaCryptoQuote)(element));\n            break;\n\n          case \"b\":\n            this.emit(websocket_1.EVENT.BARS, (0, entityv2_1.AlpacaCryptoBar)(element));\n            break;\n\n          case \"u\":\n            this.emit(websocket_1.EVENT.UPDATED_BARS, (0, entityv2_1.AlpacaCryptoBar)(element));\n            break;\n\n          case \"d\":\n            this.emit(websocket_1.EVENT.DAILY_BARS, (0, entityv2_1.AlpacaCryptoBar)(element));\n            break;\n\n          case \"o\":\n            this.emit(websocket_1.EVENT.ORDERBOOKS, (0, entityv2_1.AlpacaCryptoOrderbook)(element));\n            break;\n\n          default:\n            this.emit(websocket_1.EVENT.CLIENT_ERROR, websocket_1.ERROR.UNEXPECTED_MESSAGE);\n        }\n      }\n    });\n  }\n\n}\n\nexports.AlpacaCryptoClient = AlpacaCryptoClient;","map":{"version":3,"names":["Object","defineProperty","exports","value","AlpacaCryptoClient","entityv2_1","require","websocket_1","AlpacaWebsocket","constructor","options","url","replace","exchanges","Array","isArray","join","subscriptions","trades","quotes","bars","updatedBars","dailyBars","orderbooks","subscribeForTrades","session","push","subscribe","subscribeForQuotes","subscribeForBars","subscribeForUpdatedBars","subscribeForDailyBars","subscribeForOrderbooks","symbols","_a","_b","_c","_d","_e","_f","subMsg","action","conn","send","msgpack","encode","subscribeAll","length","msg","unsubscribeFromTrades","filter","trade","includes","unsubscribe","unsubscribeFromQuotes","quote","unsubscribeFromBars","bar","unsubscribeFromUpdatedBars","updatedBar","unsubscriceFromDailyBars","dailyBar","unsubscribeFromOrderbooks","orderbook","unsubMsg","updateSubscriptions","log","JSON","stringify","onCryptoTrade","fn","on","EVENT","TRADES","onCryptoQuote","QUOTES","onCryptoBar","BARS","onCryptoUpdatedBar","UPDATED_BARS","onCryptoDailyBar","DAILY_BARS","onCryptoOrderbook","ORDERBOOKS","dataHandler","data","forEach","element","T","emit","AlpacaCryptoTrade","AlpacaCryptoQuote","AlpacaCryptoBar","AlpacaCryptoOrderbook","CLIENT_ERROR","ERROR","UNEXPECTED_MESSAGE"],"sources":["/Users/matthewbrown/Desktop/code/Summer/Stock-Portfolio/stock-portfolio/node_modules/@alpacahq/alpaca-trade-api/dist/resources/datav2/crypto_websocket_v2.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AlpacaCryptoClient = void 0;\nconst entityv2_1 = require(\"./entityv2\");\nconst websocket_1 = require(\"./websocket\");\nclass AlpacaCryptoClient extends websocket_1.AlpacaWebsocket {\n    constructor(options) {\n        const url = options.url.replace(\"https\", \"wss\") + \"/v1beta1/crypto\";\n        const exchanges = Array.isArray(options.exchanges)\n            ? options.exchanges.join(\",\")\n            : options.exchanges;\n        options.url = `${url}?exchanges=${exchanges}`;\n        options.subscriptions = {\n            trades: [],\n            quotes: [],\n            bars: [],\n            updatedBars: [],\n            dailyBars: [],\n            orderbooks: [],\n        };\n        super(options);\n    }\n    subscribeForTrades(trades) {\n        this.session.subscriptions.trades.push(...trades);\n        this.subscribe({ trades });\n    }\n    subscribeForQuotes(quotes) {\n        this.session.subscriptions.quotes.push(...quotes);\n        this.subscribe({ quotes });\n    }\n    subscribeForBars(bars) {\n        this.session.subscriptions.bars.push(...bars);\n        this.subscribe({ bars });\n    }\n    subscribeForUpdatedBars(updatedBars) {\n        this.session.subscriptions.updatedBars.push(...updatedBars);\n        this.subscribe({ updatedBars });\n    }\n    subscribeForDailyBars(dailyBars) {\n        this.session.subscriptions.dailyBars.push(...dailyBars);\n        this.subscribe({ dailyBars });\n    }\n    subscribeForOrderbooks(orderbooks) {\n        this.session.subscriptions.orderbooks.push(...orderbooks);\n        this.subscribe({ orderbooks });\n    }\n    subscribe(symbols) {\n        var _a, _b, _c, _d, _e, _f;\n        const subMsg = {\n            action: \"subscribe\",\n            trades: (_a = symbols.trades) !== null && _a !== void 0 ? _a : [],\n            quotes: (_b = symbols.quotes) !== null && _b !== void 0 ? _b : [],\n            bars: (_c = symbols.bars) !== null && _c !== void 0 ? _c : [],\n            updatedBars: (_d = symbols.updatedBars) !== null && _d !== void 0 ? _d : [],\n            dailyBars: (_e = symbols.dailyBars) !== null && _e !== void 0 ? _e : [],\n            orderbooks: (_f = symbols.orderbooks) !== null && _f !== void 0 ? _f : [],\n        };\n        this.conn.send(this.msgpack.encode(subMsg));\n    }\n    subscribeAll() {\n        const { trades, quotes, bars, updatedBars, dailyBars, orderbooks } = this.session.subscriptions;\n        if (trades.length > 0 ||\n            quotes.length > 0 ||\n            bars.length > 0 ||\n            updatedBars.length > 0 ||\n            dailyBars.length > 0 ||\n            orderbooks.length > 0) {\n            const msg = {\n                action: \"subscribe\",\n                trades,\n                quotes,\n                bars,\n                updatedBars,\n                dailyBars,\n                orderbooks,\n            };\n            this.conn.send(this.msgpack.encode(msg));\n        }\n    }\n    unsubscribeFromTrades(trades) {\n        this.session.subscriptions.trades =\n            this.session.subscriptions.trades.filter((trade) => !trades.includes(trade));\n        this.unsubscribe({ trades });\n    }\n    unsubscribeFromQuotes(quotes) {\n        this.session.subscriptions.quotes =\n            this.session.subscriptions.quotes.filter((quote) => !quotes.includes(quote));\n        this.unsubscribe({ quotes });\n    }\n    unsubscribeFromBars(bars) {\n        this.session.subscriptions.bars = this.session.subscriptions.bars.filter((bar) => !bars.includes(bar));\n        this.unsubscribe({ bars });\n    }\n    unsubscribeFromUpdatedBars(updatedBars) {\n        this.session.subscriptions.updatedBars =\n            this.session.subscriptions.updatedBars.filter((updatedBar) => !updatedBars.includes(updatedBar));\n        this.unsubscribe({ updatedBars });\n    }\n    unsubscriceFromDailyBars(dailyBars) {\n        this.session.subscriptions.dailyBars =\n            this.session.subscriptions.dailyBars.filter((dailyBar) => !dailyBars.includes(dailyBar));\n        this.unsubscribe({ dailyBars });\n    }\n    unsubscribeFromOrderbooks(orderbooks) {\n        this.session.subscriptions.orderbooks =\n            this.session.subscriptions.orderbooks.filter((orderbook) => !orderbooks.includes(orderbook));\n        this.unsubscribe({ orderbooks });\n    }\n    unsubscribe(symbols) {\n        var _a, _b, _c, _d, _e, _f;\n        const unsubMsg = {\n            action: \"unsubscribe\",\n            trades: (_a = symbols.trades) !== null && _a !== void 0 ? _a : [],\n            quotes: (_b = symbols.quotes) !== null && _b !== void 0 ? _b : [],\n            bars: (_c = symbols.bars) !== null && _c !== void 0 ? _c : [],\n            updatedBars: (_d = symbols.updatedBars) !== null && _d !== void 0 ? _d : [],\n            dailyBars: (_e = symbols.dailyBars) !== null && _e !== void 0 ? _e : [],\n            orderbooks: (_f = symbols.orderbooks) !== null && _f !== void 0 ? _f : [],\n        };\n        this.conn.send(this.msgpack.encode(unsubMsg));\n    }\n    updateSubscriptions(msg) {\n        this.session.subscriptions = {\n            trades: msg.trades,\n            quotes: msg.quotes,\n            bars: msg.bars,\n            updatedBars: msg.updatedBars,\n            dailyBars: msg.dailyBars,\n            orderbooks: msg.orderbooks,\n        };\n        this.log(`listening to streams:\n        ${JSON.stringify(this.session.subscriptions)}`);\n    }\n    onCryptoTrade(fn) {\n        this.on(websocket_1.EVENT.TRADES, (trade) => fn(trade));\n    }\n    onCryptoQuote(fn) {\n        this.on(websocket_1.EVENT.QUOTES, (quote) => fn(quote));\n    }\n    onCryptoBar(fn) {\n        this.on(websocket_1.EVENT.BARS, (bar) => fn(bar));\n    }\n    onCryptoUpdatedBar(fn) {\n        this.on(websocket_1.EVENT.UPDATED_BARS, (updatedBar) => fn(updatedBar));\n    }\n    onCryptoDailyBar(fn) {\n        this.on(websocket_1.EVENT.DAILY_BARS, (dailyBar) => fn(dailyBar));\n    }\n    onCryptoOrderbook(fn) {\n        this.on(websocket_1.EVENT.ORDERBOOKS, (orderbook) => fn(orderbook));\n    }\n    dataHandler(data) {\n        data.forEach((element) => {\n            if (\"T\" in element) {\n                switch (element.T) {\n                    case \"t\":\n                        this.emit(websocket_1.EVENT.TRADES, (0, entityv2_1.AlpacaCryptoTrade)(element));\n                        break;\n                    case \"q\":\n                        this.emit(websocket_1.EVENT.QUOTES, (0, entityv2_1.AlpacaCryptoQuote)(element));\n                        break;\n                    case \"b\":\n                        this.emit(websocket_1.EVENT.BARS, (0, entityv2_1.AlpacaCryptoBar)(element));\n                        break;\n                    case \"u\":\n                        this.emit(websocket_1.EVENT.UPDATED_BARS, (0, entityv2_1.AlpacaCryptoBar)(element));\n                        break;\n                    case \"d\":\n                        this.emit(websocket_1.EVENT.DAILY_BARS, (0, entityv2_1.AlpacaCryptoBar)(element));\n                        break;\n                    case \"o\":\n                        this.emit(websocket_1.EVENT.ORDERBOOKS, (0, entityv2_1.AlpacaCryptoOrderbook)(element));\n                        break;\n                    default:\n                        this.emit(websocket_1.EVENT.CLIENT_ERROR, websocket_1.ERROR.UNEXPECTED_MESSAGE);\n                }\n            }\n        });\n    }\n}\nexports.AlpacaCryptoClient = AlpacaCryptoClient;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}